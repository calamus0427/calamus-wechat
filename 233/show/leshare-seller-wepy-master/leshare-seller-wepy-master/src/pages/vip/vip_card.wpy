<template>
  <Tips/>
  <view class="container" wx:if="{{init}}">
    <form @submit="submit">
      <view class="weui-cells weui-cells-form">
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">会员卡名称</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" name="title" id="title" @blur="input" value="{{card.title}}" type="text"
                   placeholder="请输入会员卡名称"/>
          </view>
        </view>

        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="weui-label">客服电话</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" name="servicePhone" id="servicePhone" @blur="input" value="{{card.servicePhone}}"
                   type="number" maxlength="11"
                   placeholder="请输入客服电话"/>
          </view>
        </view>

        <view class="weui-cell weui-cell_access" hover-class="weui-cell_active" @tap="textArea('description')">
          <view class="weui-cell__bd">使用说明</view>
          <view class="weui-cell__ft weui-cell__ft_in-access">{{descriptionText}}</view>
        </view>
        <view class="weui-cell weui-cell_access" hover-class="weui-cell_active" @tap="textArea('notice')">
          <view class="weui-cell__bd">使用提醒</view>
          <view class="weui-cell__ft weui-cell__ft_in-access">{{noticeText}}</view>
        </view>
      </view>

      <view class="mt10"></view>
      <view class="weui-cells weui-cells-form">
        <view class="weui-cell weui-cell_switch">
          <view class="weui-cell__bd">积分规则</view>
          <view class="weui-cell__ft">
            <switch checked="{{input.supplyBonus}}" id="supplyBonus" @change="input"/>
          </view>
        </view>

        <view class="weui-cell weui-cell_access" wx:if="{{input.supplyBonus}}" @tap="toSupplyBonus">
          <view class="weui-cell__bd">规则配置</view>
          <view class="weui-cell__ft weui-cell__ft_in-access">{{bounsText}}</view>
        </view>
      </view>

      <view class="mt10"></view>
      <view class="weui-cells weui-cells-form">
        <view class="weui-cell weui-cell_switch">
          <view class="weui-cell__bd">会员等级</view>
          <view class="weui-cell__ft">
            <switch checked="{{input.supplyDiscount}}" id="supplyDiscount" @change="input"/>
          </view>
        </view>

        <view class="weui-cell weui-cell_access" wx:if="{{input.supplyDiscount}}" @tap="toSupplyDiscount">
          <view class="weui-cell__bd">等级配置</view>
          <view class="weui-cell__ft weui-cell__ft_in-access">{{levelText}}</view>
        </view>
      </view>
      <view class="mt10"></view>
      <view class="weui-cells weui-cells-form">
        <view class="weui-cell weui-cell_switch">
          <view class="weui-cell__bd">满赠规则</view>
          <view class="weui-cell__ft">
            <switch checked="{{input.supplyPresent}}" id="supplyPresent" @change="input"/>
          </view>
        </view>

        <view class="weui-cell weui-cell_access" wx:if="{{input.supplyPresent}}" @tap="toSupplyPresent">
          <view class="weui-cell__bd">规则配置</view>
          <view class="weui-cell__ft weui-cell__ft_in-access">{{presentText}}</view>
        </view>
      </view>
      <ActionPanel/>
    </form>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import input from '../../mixins/input';
  import FormTips from '../../components/weui/tips';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';
  import shop from '../../api/shop';
  import vip from '../../api/vip_card';
  import ActionPanel from '../../components/common/action_panel';

  export default class VipCard extends wepy.page {
    def = {
      init: false,
      card: {},
      shop: {},
      mode: ''
    };
    data = {...this.def};
    methods = {
      textArea (type) {
        const param = {
          type: type,
          context: this.card[type] ? this.card[type] : ''
        };
        this.$navigate('vip_context?param=' + JSON.stringify(param));
      },
      toSupplyDiscount() {
        this.$navigate('supply_discount?discount=' + JSON.stringify(this.card.discountRules));
      },
      toSupplyBonus () {
        this.$navigate('supply_bonus?bonus=' + JSON.stringify(this.card.bonusRule));
      },
      toSupplyPresent() {
        this.$navigate('supply_present?present=' + JSON.stringify(this.card.memberPresentRules));
      },
      async submit ({detail}) {
        // 覆盖对象
        Object.assign(this.card, detail.value);
        // 当前表单校验
        if (!this.validate()) {
          return;
        }
        if (this.mode == 'create') {
          const param = {
            color: '#509FC9',
            brandName: this.shop.name,
            autoActivate: 1,
            supplyBalance: 0,
            quantity: 0,
            dateType: 0,
            fixedTerm: 0,
            bonusRule: this.bonusRule,
            discountRules: this.discountRules,
            memberPresentRules: this.memberPresentRules,
            description: this.description,
            notice: this.notice
          };
          Object.assign(param, this.input);
          param.supplyBonus = this.input.supplyBonus ? 1 : 0;
          param.supplyDiscount = this.input.supplyDiscount ? 1 : 0;
          param.supplyPresent = this.input.supplyPresent ? 1 : 0;
          await vip.create(param);
        } else {
          const param = this.card;
          param.supplyBonus = this.input.supplyBonus ? 1 : 0;
          param.supplyDiscount = this.input.supplyDiscount ? 1 : 0;
          param.supplyPresent = this.input.supplyPresent ? 1 : 0;
          param.bonusRule = this.card.bonusRule;
          param.discountRules = this.card.discountRules;
          param.memberPresentRules = this.card.memberPresentRules;
          param.description = this.card.description;
          param.notice = this.card.notice;
          await vip.update(param);
        }
        await Tips.success('保存成功');
        wepy.navigateBack();
      },
      input(e) {
        const fieldName = e.currentTarget.id;
        this.card[fieldName] = e.detail.value;
      }
    };

    async onLoad () {
      this.shop = await shop.info();
      this.card = await vip.info();
      if (!this.card) {
        this.mode = 'create';
        this.card = {};
        this.card.bonusRule = null;
        this.card.discountRules = [];
        this.card.memberPresentRules = [];
      } else {
        this.mode = 'update';
        this.input = this.card;
        this.input.supplyBonus = this.input.supplyBonus == 1;
        this.input.supplyDiscount = this.input.supplyDiscount == 1;
        this.input.supplyPresent = this.input.supplyPresent == 1;
      }
      this.loaded();
      Event.listen(Event.SHOP_BONUS_UPDATE, this.bonusUpdate.bind(this), this);
      Event.listen(Event.SHOP_CONTEXT_UPDATE, this.contextUpdate.bind(this), this);
      Event.listen(Event.SHOP_DISCOUNT_UPDATE, this.discountUpdate.bind(this), this);
      Event.listen(Event.SHOP_PRESENT_UPDATE, this.presentUpdate.bind(this), this);
      // 会员卡开启提醒
      if (this.shop.supportMember != 1) {
        await Tips.alert('请先开启会员卡功能');
      }
    };
    contextUpdate ({type, context}) {
      console.info(type, context);
      this.card[type] = context;
    };
    bonusUpdate (data) {
      this.card.bonusRule = data;
      this.input.bonusRule = data;
    };
    discountUpdate(param) {
      this.card.discountRules = param;
      this.input.discountRules = param;
    };
    presentUpdate(param) {
      this.card.memberPresentRules = param;
      this.input.memberPresentRules = param;
    };
    validate () {
      const {supplyBonus, supplyDiscount, discountRules, bonusRule} = this.input;
      if (supplyBonus && bonusRule == null) {
        this.tips('请填写积分规则');
        return false;
      }
      if (supplyDiscount && discountRules.length == 0) {
        this.tips('请填写折扣规则');
        return false;
      }
      const rules = [
        {
          value: this.card.title,
          method: 'required',
          message: '会员卡名称不能为空'
        },
        {
          value: this.card.title,
          method: 'minlength',
          param: 2,
          message: '会员卡名称过短'
        },
        {
          value: this.card.title,
          method: 'maxlength',
          param: 10,
          message: '会员卡名称过长'
        },
        {
          value: this.card.servicePhone,
          method: 'tel',
          message: '电话号码格式不正确'
        }
      ];
      return this.check(rules);
    }
    computed = {
      descriptionText() {
        return this.previewText('description')
      },
      noticeText() {
        return this.previewText('notice')
      },
      bounsText() {
        if (this.card && this.card.bonusRule) {
          const {costBonusUnit, reduceMoney, costMoneyUnit, increaseBonus} = this.card.bonusRule;
          let sketch = '';
          if (this.card.bonusRule.isCost == 1) {
            sketch = `${costMoneyUnit}元得${increaseBonus}分/${costBonusUnit}分抵${reduceMoney}元`;
          } else {
            sketch = `${costMoneyUnit}元得${increaseBonus}分`;
          }
          return sketch;
        } else {
          return '尚未配置';
        }
      },
      levelText() {
        if (this.card && this.card.discountRules && this.card.discountRules.length > 0) {
          return `已配置${this.card.discountRules.length}个级别`;
        } else {
          return '尚未配置';
        }
      },
      presentText() {
        if (this.card && this.card.memberPresentRules && this.card.memberPresentRules.length > 0) {
          return `已配置${this.card.memberPresentRules.length}个规则`
        }
      }
    };
    previewText(key) {
      if (this.card && this.card[key]) {
        const value = this.card[key];
        return value.length > 13 ? value.substring(0, 13) + '...' : value;
      } else {
        return '';
      }
    }
    config = {
      navigationBarTitleText: '会员卡管理'
    };
    mixins = [base, input];
    components = {
      Tips: FormTips,
      ActionPanel: ActionPanel
    };
  }
</script>
<style lang="scss">
    @import "../../styles/variable";

    .bg-color {
        background-color: #F5F5F5;
    }
</style>
