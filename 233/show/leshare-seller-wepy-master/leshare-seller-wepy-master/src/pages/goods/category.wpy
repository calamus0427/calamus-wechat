<template>
  <view class="container" wx:if="{{init}}">
    <!--列表展现-->
    <repeat for="{{list}}" key="index" index="index" item="item">
      <CategoryItem :category.sync="item" @up.user="up" @down.user="down" @top.user="top" @bottom.user="bottom"/>
    </repeat>

    <view class="box"></view>
    <!--操作栏-->
    <view class="row edit-box" wx:if="{{check}}">
      <view class="zan-btn zan-btn--small zan-btn--primary delete-box" @tap="add">新增分类</view>
      <view class="zan-btn zan-btn--small delete-box" @tap="sort">分类排序</view>
    </view>
    <view class="row edit-box" wx:if="{{!check}}">
      <view class="zan-btn zan-btn--small delete-box zan-btn--primary" @tap="ok">确认</view>
      <view class="zan-btn zan-btn--small delete-box" @tap="cancel">返回</view>
    </view>
    <!--占位符-->
    <Placeholder :show.sync="isPageEmpty" message="尚未配置分类"/>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import goods from '../../api/goods';
  import Placeholder from '../../components/common/placeholder';
  import ZanTab from '../../components/zanui/tab';
  import ActionBar from '../../components/common/action_bar';
  import Event from '../../utils/Event';
  import Loadmore from '../../components/weui/loadmore';
  import CategoryItem from '../../components/goods/category_item';

  export default class Category extends wepy.page {
    def = {
      init: false,
      list: [],
      isPageEmpty: false,
      check: true,
      // size: null
    };
    data = {...this.def};

    async onLoad () {
      await this.update();
      Event.listen(Event.CATEGORY_LIST_UPDATE, this.update.bind(this), this);
    };

    async update () {
      this.list = await goods.getInnerCategories();
      console.info(this.list);
      this.isPageEmpty = this.list == null || this.list.length == 0;
      // this.size = this.list ? this.list.length - 1 : null;
      this.loaded();
    }
    methods = {
      add () {
        this.$navigate('category_edit?mode=create');
      },
      sort () {
        this.changeCheck();
      },
      ok () {
        this.changeCheck();
        const listsId = this.list.map(item => {
          return item.id;
        });
        console.info(listsId);
        // 上传接口
        // 刷新页面
      },
      cancel () {
        this.changeCheck();
        this.update();
      },
      up (index) {
        if (index == 0) {
          return;
        }
        const target = index - 1;
        this.swap(index, target);
      },
      down (index) {
        if (index == this.size) {
          return;
        }
        const target = index + 1;
        this.swap(index, target);
      },
      top (index) {
        if (index == 0) {
          return;
        }
        const target = this.list[index];
        this.list.splice(index, 1);
        this.list.splice(0, 0, target);
      },
      bottom (index) {
        if (index == this.size) {
          return;
        }
        const target = this.list[index];
        this.list.splice(index, 1);
        this.list.splice(this.size, 0, target);
      }
    };

    swap (srcIndex, targetIndex) {
      const list = this.list;
      const src = list[srcIndex];
      const target = list[targetIndex];
      list[targetIndex] = src;
      list[srcIndex] = target;
    };

    changeCheck () {
      this.check = !this.check;
      this.list.forEach(item => {
        item.check = !item.check;
      });
    };

    events = {};
    components = {
      Placeholder: Placeholder,
      ZanTab: ZanTab,
      ActionBar: ActionBar,
      Loadmore: Loadmore,
      CategoryItem: CategoryItem
    };
    mixins = [base];
    config = {
      navigationBarTitleText: '分类管理'
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  .edit-box{
    height: 50rpx;
    position: fixed;
    bottom: 0;
    padding:20rpx 0;
    background-color: white;
    border-top: $border;
    border-bottom: $border;
    width: 100%;
    flex-direction: row-reverse;
  }
  .box{
    height:100px;
  }
</style>
