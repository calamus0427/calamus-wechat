<template>
  <view class="container" wx:if="{{init}}">
    <!--客户信息-->
    <view class="customer-box">

      <!--客户基本信息-->
      <view class="customer-info-box row-between">

        <!--左侧头像-->
        <image class="customer-avatar"
               src="{{customer.customer.avatarUrl ? customer.customer.avatarUrl: '/images/icons/customer.png'}}"/>

        <!--右侧主区域-->
        <view class="column customer-main-box">
          <!--姓名/打电话-->
          <view class="row-between">
            <text class="xxl">{{customer.customer.nickName ? customer.customer.nickName : '微信用户'}}</text>
            <image class="icon" src="/images/icons/call.png" @tap.stop="phone"/>
          </view>

          <!--地址信息-->
          <view class="row-between" @tap.stop="addressList({{customerId}})">
            <!--地址/电话-->
            <view class="column address-box">
              <text>电话：{{customer.address ? customer.address.phone : '暂无电话'}}</text>
              <text>地址：{{customer.address ? customer.address.fullAddress : '暂无地址'}}</text>
            </view>
            <!--更多地址-->
            <image class="icon" src="/images/icons/more-gray.png"></image>
          </view>

        </view>
      </view>

      <view class="customer-hr"></view>
      <view class="row-between vip-column" @tap="moreVip" wx:if="{{member != null}}">
        <image class="card-image" src="/images/icons/vip_card.png"/>
        <view class="row-between">
          <text class="muted">会员等级 : {{member.discountRule.levelName}}</text>
          <view class="vertical-line"/>
          <text class="muted">当前积分 : {{member.bonus}}</text>
          <image class="more-image" src="/images/icons/more-gray.png"/>
        </view>
        <text class="muted" wx:if="{{member == null}}">暂未注册</text>
      </view>
      <view class="row vip-column" @tap="moreVip" wx:if="{{member == null}}">
        <image class="card-image" src="/images/icons/vip_card.png"/>
        <text class="muted ml20">暂未注册</text>
      </view>
      <view class="customer-hr"></view>
      <!--客户统计信息-->
      <view class="count-box row-around bg-white">
        <view class="count-item column-center">
          <text class="count-value">{{customer.countCustomerInfo.lastOrderTime ? customer.countCustomerInfo.lastOrderTime : '0次'}}</text>
          <text class="muted">最近购买</text>
        </view>
        <view class="count-item column-center">
          <text class="count-value">￥{{customer.countCustomerInfo.totalPrice}}</text>
          <text class="muted">交易总额</text>
        </view>
        <view class="count-item column-center">
          <text class="count-value">{{customer.countCustomerInfo.totalOrderCount}}次</text>
          <text class="muted">购买次数</text>
        </view>
        <view class="count-item column-center">
          <text class="count-value">{{customer.countCustomerInfo.totalCouponCount}}张</text>
          <text class="muted">卡卷数量</text>
        </view>
      </view>
    </view>

    <!--TAB-->
    <view>
      <ZanTab :tab.sync="tab" fixed="0"/>
    </view>

    <!--列表区域-->
    <view>

      <view class="zan-btns" wx:if="{{tab.selectedId == 'COUPON'}}">
        <button class="zan-btn zan-btn--fill" @tap="send">发放优惠券</button>
      </view>
      <repeat for="{{page.list}}" key="index" index="index" item="item">
        <block wx:if="{{tab.selectedId == 'HIS_ORDER'}}">
          <OrderItem :order.sync="item" @tap.user="detail" action="0"></OrderItem>
        </block>
        <block wx:elif="{{tab.selectedId == 'OFTEN_GOODS'}}">
          <OftenGoods :goods="item"></OftenGoods>
        </block>
        <block wx:elif="{{tab.selectedId == 'COUPON'}}">
          <CouponItem selectAction="0" :coupon.sync="item"></CouponItem>
        </block>
        <block wx:elif="{{tab.selectedId == 'HIS_BONUS'}}">
          <BonusItem :bonusInfo.sync="item"></BonusItem>
        </block>
      </repeat>

      <!-- 加载提示 -->
      <Loadmore :page.sync="page" emptyText="暂无记录"/>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import ZanTab from '../../components/zanui/tab';
  import customerInfo from '../../api/customer_info';
  import base from '../../mixins/base';
  import pagination from '../../mixins/pagination';
  import order from '../../api/order';
  import OrderItem from '../../components/order/item';
  import coupon from '../../api/coupon';
  import CouponItem from '../../components/customer/coupon_item';
  import BonusItem from '../../components/vip/bonus_item';
  import goods from '../../api/goods';
  import member from '../../api/member';
  import OftenGoods from '../../components/customer/often_goods';
  import Loadmore from '../../components/weui/loadmore';
  import Placeholder from '../../components/common/placeholder';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';

  export default class CustomerInfo extends wepy.page {
    def = {
      init: false,
      attention: false,
      customer: {},
      customerId: '',
      member: {},
      page: {
        list: [
          {orderGoodsInfos: []}
        ]
      },
      tab: {
        list: [
          {id: 'HIS_ORDER', title: '历史订单'},
          {id: 'OFTEN_GOODS', title: '常购商品'},
          {id: 'COUPON', title: '优惠券'},
          {id: 'HIS_BONUS', title: '历史积分'}
        ],
        selectedId: 'HIS_ORDER'
      },
      order: {},
      good: {},
      coupon: {},
      memberId: 0
    };
    data = {...this.def};

    async onLoad (options) {
      this.customerId = options.customerId;
      this.member = await member.customerInfo(this.customerId);
      if (this.member) {
        this.memberId = this.member.memberId;
      }
      this.tab.selectedId = 'HIS_ORDER';
      this.customer = await customerInfo.detailInfo(this.customerId);
      this.page = order.hisPage();
      this.next();
      Event.listen(Event.CUSOMTER_COUPON_UPDATE, this.updateInfo.bind(this), this);
      Event.listen(Event.SHOP_CUSTOMER_UPDATE, this.updateMemberInfo.bind(this), this);
    };
    updateInfo () {
      this.update();
      this.customer.countCustomerInfo.totalCouponCount++;
      this.$apply();
    }
    async updateMemberInfo (params) {
      this.member = await member.customerInfo(this.customerId);
      this.$apply();
    }

    methods = {
      moreVip () {
        if (this.member) {
          const params = {
            customer: this.customer,
            member: this.member
          };
          this.$preload('data', params);
          this.$navigate('/pages/vip/vip_scan');
        } else {
          Tips.alert('该用户还未注册本店会员！')
        }
      },
      send () {
        const customerId = this.customerId;
        this.$navigate('./coupon_send', {customerId});
      },
      phone () {
        if (this.customer.address) {
          wepy.makePhoneCall({phoneNumber: this.customer.address.phone});
        } else {
          Tips.alert('该用户没有电话');
        }
      },
      addressList (customerId) {
        if (!this.customer.addressList) {
          Tips.alert('该用户没有地址');
          return;
        }
        this.$navigate('./address_list', {customerId});
      },
      detail (orderId) {
        this.$navigate('../order/detail', {orderId});
      }
    };
    // 获取分页参数
    params() {
      return {
        customer_id: this.customerId,
        member_id: this.memberId
      };
    }
    events = {
      async change () {
        this.page.clear();
        this.$apply();
        if (this.tab.selectedId == 'HIS_ORDER') {
          this.page = order.hisPage();
        } else if (this.tab.selectedId == 'OFTEN_GOODS') {
          this.page = await goods.oftenGoodsPage(this.customerId);
        } else if (this.tab.selectedId == 'COUPON') {
          this.page = await coupon.cutomerCouponPage(this.customerId);
        } else if (this.tab.selectedId == 'HIS_BONUS') {
          if (this.memberId == 0) {
            Tips.error('该用户不是会员');
            return
          }
          this.page = await member.bonusPage(this.customerId);
        }
        this.next();
      }
    };
    mixins = [base, pagination];
    components = {
      ZanTab: ZanTab,
      OrderItem: OrderItem,
      CouponItem: CouponItem,
      OftenGoods: OftenGoods,
      Loadmore: Loadmore,
      Placeholder: Placeholder,
      BonusItem: BonusItem
    };
    config = {
      navigationBarTitleText: '客户信息',
      enablePullDownRefresh: true
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";

  .customer-box {
    margin-bottom: rpx(10);
    border-bottom: $border;
  }

  .customer-main-box {
    flex: 1;
    padding-left: rpx(25);
  }

  .customer-info-box {
    padding: rpx(30);
    background-color: #FFF;

    .customer-avatar {
      @include icon-round(rpx(180));
    }

    .address-box {
      max-width: rpx(430);
      text {
        color: $color-muted;
        font-size: $text-sm;
        word-break: break-all;
      }
    }
  }

  .customer-hr {
    width: 100%;
    border-top: $border;
  }

  /*统计区域*/
  .count-box {
    padding: rpx(20) 0;
    .count-item {
      width: rpx(250);
    }
  }

  .vip-column {
    background-color: white;
    padding: rpx(20) rpx(30);
    .card-image {
      width: rpx(50);
      height: rpx(50);
      margin-right: rpx(20);
    }
    .more-image {
      width: rpx(50);
      height: rpx(50);
      margin-left: rpx(40);
    }
    .vertical-line {
      width: rpx(2);
      height: rpx(30);
      background-color: $color-muted;
    }
  }

  .row-between {
    flex: 1;
  }
</style>
