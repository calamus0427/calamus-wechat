<template>
  <Tips />
  <view class="page" wx:if="{{init}}">
    <view class="brand column-center">
      <image class="logo" src="/images/home/shop-logo.png"/>
      <text>乐享商家助手</text>
    </view>
    <form @submit="confirm">
      <view class="page__bd form">
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input weui-cell_vcode">
            <view class="weui-cell__hd">
              <view class="weui-label">手机号</view>
            </view>
            <view class="weui-cell__bd">
              <input class="weui-input" id="phone" @input="input" type="number" maxlength="11" placeholder="请输入手机号"/>
            </view>
            <view class="weui-cell__ft">
              <VCode @tap.user="code"/>
            </view>
          </view>
          <view class="weui-cell weui-cell_input weui-cell_vcode">
            <view class="weui-cell__hd">
              <view class="weui-label">验证码</view>
            </view>
            <view class="weui-cell__bd">
              <input class="weui-input" type="number" name="code" maxlength="6" placeholder="请输入验证码"/>
            </view>
          </view>
        </view>

        <view class="weui-btn-area">
          <button class="weui-btn" type="primary" form-type="submit">确定</button>
        </view>
      </view>
    </form>
  </view>

  <Copyright buttom="true" />

</template>
<script>
  import wepy from 'wepy';
  import auth from '../../api/auth';
  import base from '../../mixins/base';
  import input from '../../mixins/input';
  import FormTips from '../../components/weui/tips';
  import VCode from '../../components/weui/vcode';
  import Tips from '../../utils/Tips';
  import WxUtils from '../../utils/WxUtils';
  import Copyright from '../../components/common/copyright';
  export default class Login extends wepy.page {
    def = {
      init: false,
      loginMassage: {}
    };
    data = {...this.def};
    async onLoad () {
      try {
        const loginCode = auth.getConfig('login_code');
        console.debug(`login_code: ${loginCode}`);
        if (loginCode != null) {
          const result = await auth.check(loginCode);
          if (result == 'SUCCESS') {
            const shopId = auth.getConfig('shop_id');
            console.debug(`shop_id: ${shopId}`);
            if (shopId != null) {
              this.$switch('home');
            } else {
              this.$redirect('shops');
            }
          }
        } else {
          WxUtils.checkSDK();
        }
        console.debug(`login_fail: ${loginCode}`);
      } catch (e) {
        await auth.removeConfig('login_code');
      } finally {
        this.loaded();
      }
    }
    methods = {
      async confirm({detail}) {
        // 覆盖对象
        Object.assign(this.loginMassage, detail.value);
        if (!this.isValid(this.input.phone)) {
          return;
        }
        try {
          let loginCode;
          try {
            loginCode = await auth.login(this.input.phone, this.loginMassage.code);
          } catch (err) {
            if (err.serverCode == 10501) {
              loginCode = err.serverData.login_code;
              Tips.loaded();
              await Tips.modal('您尚未注册，将进入示例店铺');
            } else {
              this.tips(err.message);
              return;
            }
          }
          await auth.setConfig('login_code', loginCode);
          await auth.removeConfig('shop_id');
          this.$redirect('shops');
        } catch (e) {
          this.tips(e.message);
        } finally {
          this.loaded();
        }
      },
      async code() {
        if (!this.isPhoneValid(this.input.phone)) {
          return;
        }
        // 发送验证码
        try {
          await auth.sms(this.input.phone);
          this.$invoke('VCode', 'cd', 60);
          Tips.success('验证码已发送');
        } catch (err) {
          if (err.serverCode == 10005) {
            console.debug('请求验证码太频繁');
            this.$invoke('VCode', 'cd', 60);
          }
          this.tips(err.message);
        } finally {
          this.loaded();
        }
      }
    };
    onShareAppMessage () {
      const title = '乐享商家助手';
      const url = '/pages/home/index';
      return Tips.share(title, url, title);
    }
    /**
     * 校验表单提交
     */
    isValid(phone) {
      if (!this.isPhoneValid(phone)) {
        return false;
      }
      if (this.isEmpty(this.loginMassage.code)) {
        this.tips('请输入验证码');
        return false;
      }
      return true;
    }
    /**
     * 校验电话号码
     */
    isPhoneValid(phone) {
      if (this.isEmpty(phone)) {
        this.tips('请输入手机号码');
        return false;
      }
      const reg = /^1[34578]\d{9}$/;
      if (!reg.test(phone)) {
        this.tips('电话号码格式错误');
        return false;
      }
      return true;
    }
    mixins = [input, base];
    config = {
      navigationBarTitleText: '商家登录'
    };
    components = {
      Tips: FormTips,
      VCode: VCode,
      Copyright: Copyright
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  .brand{
    padding-top: 60rpx;
    padding-bottom: 60rpx;

    .logo{
      width: 100px;
      height: 100px;
    }

    text{
      margin-top: 15rpx;
      font-size: $text-form;
    }
  }
</style>
