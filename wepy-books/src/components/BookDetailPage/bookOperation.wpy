<style lang="scss">
.operation {
    box-sizing: border-box;
    height: 20vh;
    display: flex;
    padding: 10%;
    .box {
        height: 20px;
        padding: 12px;
        font-size: 24rpx;
        line-height: 20px;
        font-weight: bold;
        margin-right: 20px;
        border-radius: 5px;
        flex: 1;
        text-align: center;
    }
    .unactive {
        border: 2rpx solid yellow;
        color: #EEB422;
    }
    .active {
        border: 2rpx solid #ff7700;
        color: white;
        background: #ff7700
    }
}
</style>
<template>
    <view class="operation">
        <view class="box {{state.isCollect  ? ' active' : 'unactive'}}" @tap="collectBook">
           {{state.isCollect ? '已收藏': '收藏'}}
        </view>
        <view class="box {{state.isInCar  ? ' active' : 'unactive'}}" @tap="lendBook">
            {{state.isInCar ? '已在书包' : '借阅'}}
        </view>
        <view class="box {{state.isAppoint  ? ' active' : 'unactive'}}" @tap="orderBook">
            {{state.isAppoint ? '已预约' : '预约'}}
        </view>
    </view>
</template>
<script>
import wepy from 'wepy'
import login from '../mixins/login'
import { api } from '../../config'
export default class bookOperation extends wepy.component {

    components = {

    }
    data = {
        state: {
            isCollect: false,
            isInCar: false,
            isAppoint: false
        },
        bookId: '',
        count: {
            bookCount: '',
            bookBorrowCount: ''
        },
        isRegister: false,
        inTheSale: true
    }
    mixins = [login]
    methods = {
        async lendBook() {
            if (this.checkInthesale() === false) {
                return false
            }
            // 是否注册
            if (this.checkRegister() === false) {
                return false
            }
            if (this.state.isInCar) {
                wx.showModal({
                    title: '提示',
                    content: `该书已经在您的书包里了哦~`
                })
                return false
            }
            if (this.count.bookBorrowCount === 0) {
                wx.showModal({
                    title: '提示',
                    content: `该书的可借数量为0,您可以预约此书,若此书有库存,我们会在第一时间通知您~`
                })
                return false
            }
            wx.showModal({
                title: '提示',
                content: '确认借阅此书',
                success: async (res) => {
                    if (res.confirm) {
                        try {
                            await wepy.request({
                                url: `${api.lendBook.insertToCar.url}`,
                                method: api.lendBook.insertToCar.method,
                                data: {
                                    userId: this.userId,
                                    bookId: this.bookId
                                }
                            })
                            this.state.isInCar = true
                            this.$apply()
                        } catch (error) {
                            console.log(error)
                        }
                    } else {
                        return false
                    }
                }
            })
        },
        async orderBook() {
            if (this.checkInthesale() === false) {
                return false
            }
            if (this.checkRegister() === false) {
                return false
            }
            if (this.state.isAppoint) {
                wx.showModal({
                    title: '提示',
                    content: `您已经预约了该书哦~`
                })
                return
            }
            if (this.count.bookBorrowCount === 0) {
                wx.showModal({
                    title: '提示',
                    content: '该书可借数量为0,是否推送消息?,设置为推送后,此书若有库存,我们将第一时间提醒向您提醒',
                    success: async (res) => {
                        if (res.confirm) {
                            try {
                                await wepy.request({
                                    url: `${api.appointBook.addSendBookMsg.url}/${this.userId}/${this.bookId}`,
                                    method: api.appointBook.addSendBookMsg.method
                                })
                                wx.showToast({
                                    title: '成功设置推送消息',
                                    icon: 'success',
                                    duration: 2000
                                })
                                return true
                            } catch (error) {
                                console.log(error)
                            }
                        } else {
                            return false
                        }
                    }
                })
            }
            if (this.count.bookBorrowCount > 0) {
                wx.showModal({
                    title: '提示',
                    content: '是否预约此书?',
                    success: async (res) => {
                        if (res.confirm) {
                            try {
                                await wepy.request({
                                    url: `${api.appointBook.addAAppointment.url}`,
                                    // url: api.appointBook.addAAppointment.url,
                                    method: api.appointBook.addAAppointment.method,
                                    data: {
                                        userId: this.userId,
                                        bookId: this.bookId
                                    }
                                })
                                this.state.isAppoint = true
                                this.$apply()
                                wx.showToast({
                                    title: '成功预约此书',
                                    icon: 'success',
                                    duration: 2000
                                })
                            } catch (error) {
                                console.log(error)
                            }
                        } else {
                            return false
                        }
                    }
                })
            }
        },
        async collectBook() {
            // 如果未收藏
            let content = ''
            if (!this.state.isCollect) {
                content = '确认收藏本书?'
            } else {
                content = '确认取消收藏本书?'
            }
            wx.showModal({
                title: '提示',
                content: content,
                success: async (res) => {
                    if (res.confirm) {
                        await wepy.request({
                            url: `${api.collectBook.insertOrDeleteCollect.url}`,
                            method: api.collectBook.insertOrDeleteCollect.method,
                            data: {
                                uid: this.userId,
                                bid: this.bookId
                            }
                        })
                        wx.showToast({
                            title: '成功',
                            icon: 'success',
                            duration: 2000
                        })
                        this.state.isCollect = !this.state.isCollect
                        this.$apply()
                    } else {
                        return false
                    }

                }
            })
        }

    }
    events = {
        'bookData': async (data, bookId) => {
            this.bookId = bookId
            if (!bookId) {
                this.inTheSale = false
                this.$apply()
                this.$emit('loadComplete', true)
                console.log('操作加载完成')
                return false
            }
            this.$apply()
            // 通过mixins里获取userId
            await this.getStoreById()
            // 查询用户是否注册
            await this.getUserInfo()
            // 查询是否收藏,借阅,预约
            await this.checkOutState()

            this.$emit('loadComplete', true)
        }
    }
    async onLoad() {

        console.log('BookDetail-Operation')
    }
    // 查询是否收藏,借阅,预约
    async checkOutState() {
        try {
            let isCollect = await wepy.request({
                url: api.collectBook.isCollect.url,
                method: api.collectBook.isCollect.method,
                data: {
                    uid: this.userId,
                    bid: this.bookId
                }
            })
            let isInCar = await wepy.request({
                url: api.lendBook.isInCar.url + this.userId + '/' + this.bookId,
                method: api.lendBook.isInCar.method
            })
            let isAppoint = await wepy.request({
                url: api.appointBook.isAppoint.url,
                method: api.appointBook.isAppoint.method,
                data: {
                    userId: this.userId,
                    bookId: this.bookId
                }
            })
            this.state.isCollect = isCollect.data.issuccess
            this.state.isInCar = isInCar.data.issuccess
            this.state.isAppoint = isAppoint.data.issuccess
            this.$apply()
        } catch (error) {
            console.log(error)
        }
    }
    // 是否注册
    async getUserInfo() {
        let userDetaiInfo = await wepy.request({
            url: api.user.userInfo.url + this.userId,
            method: api.user.userInfo.method
        })
        this.isRegister = userDetaiInfo.data.isregister
        this.$apply()
    }
    // 获得馆藏书目,可借书目
    getCount(bookCount, bookBorrowCount) {
        this.count.bookCount = bookCount
        this.count.bookBorrowCount = bookBorrowCount
    }

    // 检查是否注册
    checkRegister() {
        if (!this.isRegister) {
            wx.showModal({
                title: '提示',
                content: `您还未完善个人信息,是否跳转到完善个人信息页?~`,
                success: (res) => {
                    if (res.confirm) {
                        wepy.navigateTo({
                            url: 'editInfo'
                        })
                    } else {
                        return false
                    }
                }
            })
            return false
        }
    }
    checkInthesale() {
        if (!this.inTheSale) {
            wx.showModal({
                title: '提示',
                content: '该图书暂未上架~敬请期待!'
            })
            return false
        }
    }
}
</script>
